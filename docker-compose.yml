services:
  # Servicio de la aplicación Laravel (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile # O la ruta a tu Dockerfile, por ejemplo, ./docker/php/Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      # - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini # Opcional: para un php.ini personalizado
    environment:
      # Variables de entorno para Laravel
      DB_CONNECTION: mysql
      DB_HOST: db # El nombre del servicio de la base de datos en Docker Compose
      DB_PORT: 3306
      DB_DATABASE: '${DB_DATABASE}' # El nombre de tu base de datos
      DB_USERNAME: '${DB_USERNAME}' # Usuario de la base de datos
      DB_PASSWORD: '${DB_PASSWORD}' # Contraseña de la base de datos
      APP_ENV: local
      APP_DEBUG: 'true'
      APP_URL: http://localhost
    networks:
      - laravel_network

  # Servicio del servidor web (Nginx)
  web:
    image: nginx:alpine # Una imagen ligera de Nginx
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
        - '${APP_PORT:-80}:80'
        - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    volumes:
      - ./:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf # Ruta a tu configuración de Nginx
    depends_on:
      - app # Nginx depende de que la aplicación PHP esté levantada
    networks:
      - laravel_network

  # Servicio de la base de datos (MySQL)
  db:
    image: mysql:8.0 # O postgres, mariadb, etc.
    container_name: laravel_mysql
    restart: unless-stopped
    environment:      
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_EXTRA_OPTIONS: '${MYSQL_EXTRA_OPTIONS}'
    volumes:
      - dbdata:/var/lib/mysql # Persistencia de datos para la base de datos
    ports:
      - "3306:3306" # Opcional: para acceder a la base de datos desde el host (ej. con TablePlus, DBeaver)
    networks:
      - laravel_network

  # Opcional: PhpMyAdmin para gestionar la base de datos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80" # Accede a PhpMyAdmin en http://localhost:8080
    environment:
      PMA_HOST: db # Conecta PhpMyAdmin al servicio 'db'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    depends_on:
      - db
    networks:
      - laravel_network

# Volúmenes para persistencia de datos
volumes:
  dbdata: # El volumen 'dbdata' asegura que tus datos de MySQL persistan entre reinicios de contenedores

# Redes para que los servicios se comuniquen entre sí
networks:
  laravel_network:
    driver: bridge # Crea una red bridge para los contenedores