services:
  # Servicio de la aplicación Laravel (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html
    # Eliminamos el volumen que montaba todo el código
    # volumes:
    #   - ./:/var/www/html
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: '${DB_DATABASE}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
      APP_ENV: production
      APP_DEBUG: 'false'
      APP_URL: http://localhost
    networks:
      - laravel_network

  # Servicio del servidor web (Nginx)
  web:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - '${APP_PORT:-80}:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    volumes:
      # Solo montamos la configuración de Nginx
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel_network

  # Servicio de la base de datos (MySQL)
  db:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_EXTRA_OPTIONS: '${MYSQL_EXTRA_OPTIONS}'
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel_network

  # PhpMyAdmin para gestionar la base de datos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    depends_on:
      - db
    networks:
      - laravel_network

volumes:
  dbdata:

networks:
  laravel_network:
    driver: bridge