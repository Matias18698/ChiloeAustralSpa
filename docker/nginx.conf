server {
    listen 80;
    server_name localhost;
    root /var/www/html/public; # Laravel sirve desde la carpeta public

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.html index.htm index.php;

    charset utf-8;

    # Esta es la sección crucial para los archivos de Vite y otras rutas.
    # Intenta servir el archivo directamente ($uri), luego como directorio ($uri/),
    # y si no los encuentra (como /build/assets/...), pasa la solicitud a index.php.
    # PERO: ¡Para archivos estáticos como los de Vite, necesitamos una directiva de ubicación que los maneje directamente!
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # ¡AÑADE ESTA SECCIÓN PARA ARCHIVOS ESTATICOS DE VITE!
    # Sirve directamente los archivos de la carpeta 'build' (generados por Vite).
    # Esto evita que las solicitudes para estos archivos pasen a Laravel (index.php).
    location ~ ^/build/.+\.(css|js|json|svg|jpg|jpeg|png|gif|webp|woff|woff2|eot|ttf|otf)$ {
        try_files $uri $uri/ /index.php?$query_string;
        # O, de forma más simple y directa, si sabes que están ahí:
        # try_files $uri =404; # Si usas esto, asegura que el path sea correcto
        # Si los archivos están en /public/build, entonces el root ya los cubre.
        # El problema suele ser si la solicitud llega a Laravel en vez de Nginx.
        # La directiva `try_files $uri $uri/ /index.php?$query_string;` en la `location /`
        # por lo general ya los manejaría si están dentro del root.
        # Si sigue fallando, podría ser un problema de permisos o de que Vite no los genera en ese path.
    }


    location ~ \.php$ {
        fastcgi_pass app:9000; # 'app' es el nombre de tu servicio PHP-FPM, '9000' es el puerto por defecto de PHP-FPM
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}